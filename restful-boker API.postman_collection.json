{
	"info": {
		"_postman_id": "2cad476b-f7e5-4770-b18a-308812c458e2",
		"name": "restful-boker API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25047499"
	},
	"item": [
		{
			"name": "Auth-Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade token\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"token\");\r",
							"    pm.environment.set(\"token\", jsonData.token)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth}}/auth",
					"host": [
						"{{auth}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - GetBookingIds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade bookingid\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.property(\"bookingid\");\r",
							"    pm.environment.set(\"bookingid\", jsonData[0].bookingid)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{auth}}/booking",
					"host": [
						"{{auth}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - GetBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade firstname\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"firstname\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade lastname\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"lastname\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade totalprice\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"totalprice\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade depositpaid\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"depositpaid\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade bookingdates\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"bookingdates\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade checkin\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.bookingdates).to.property(\"checkin\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade checkin\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.bookingdates).to.property(\"checkout\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade additionalneeds\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"additionalneeds\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{auth}}/booking/{{bookingid}}",
					"host": [
						"{{auth}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade bookingid\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"bookingid\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade booking\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"booking\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade firstname\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.booking).to.property(\"firstname\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade lastname\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.booking).to.property(\"lastname\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade totalprice\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.booking).to.property(\"totalprice\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade depositpaid\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.booking).to.property(\"depositpaid\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade bookingdates\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.booking).to.property(\"bookingdates\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade checkin\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.booking.bookingdates).to.property(\"checkin\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade checkout\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.booking.bookingdates).to.property(\"checkout\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade additionalneeds\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.booking).to.property(\"additionalneeds\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth}}/booking",
					"host": [
						"{{auth}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - UpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade firstname\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"firstname\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade lastname\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"lastname\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade totalprice\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"totalprice\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade depositpaid\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"depositpaid\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade bookingdates\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"bookingdates\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade checkin\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.bookingdates).to.property(\"checkin\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade checkout\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.bookingdates).to.property(\"checkout\");\r",
							"});\r",
							"\r",
							"pm.test(\"Testando existencia da propriedade additionalneeds\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.property(\"additionalneeds\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Shirley\",\r\n    \"lastname\" : \"Lozano\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Nova QA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth}}/booking/250",
					"host": [
						"{{auth}}"
					],
					"path": [
						"booking",
						"250"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}